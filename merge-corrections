// merge-corrections.js
// Run with: node merge-corrections.js path/to/contribution.json

const fs = require('fs');

if (process.argv.length < 3) {
    console.log('Usage: node merge-corrections.js <path-to-contribution-file.json>');
    process.exit(1);
}

const contributionPath = process.argv[2];

// Read files
const master = JSON.parse(fs.readFileSync('community-corrections/master.json', 'utf8'));
const contribution = JSON.parse(fs.readFileSync(contributionPath, 'utf8'));

console.log('\nðŸ“¥ Processing contribution...');
console.log(`   From: ${contributionPath}`);
console.log(`   Symbols: ${contribution.stats.totalSymbols}`);
console.log(`   Corrections: ${contribution.stats.totalCorrections}\n`);

let symbolsAdded = 0;
let correctionsAdded = 0;

// Merge corrections
Object.keys(contribution.corrections).forEach(key => {
    if (!master.corrections[key]) {
        // New symbol
        master.corrections[key] = contribution.corrections[key];
        symbolsAdded++;
        correctionsAdded += contribution.corrections[key].corrections.length;
    } else {
        // Existing symbol - merge corrections
        contribution.corrections[key].corrections.forEach(corr => {
            const existing = master.corrections[key].corrections.find(c => c.to.id === corr.to.id);
            if (existing) {
                // Update count for existing correction
                existing.count += corr.count;
                existing.lastUsed = new Date().toISOString();
            } else {
                // Add new correction
                master.corrections[key].corrections.push(corr);
                correctionsAdded++;
            }
        });
    }
});

// Update stats
master.lastUpdated = new Date().toISOString();
master.stats.totalSymbols = Object.keys(master.corrections).length;
master.stats.totalCorrections = Object.values(master.corrections)
    .reduce((sum, c) => sum + c.corrections.reduce((s, cor) => s + cor.count, 0), 0);

// Add contributor if not already in list
if (!master.stats.contributors) {
    master.stats.contributors = [];
}

// You can manually add contributor name here or extract from filename
console.log('âœ… Merge complete!');
console.log(`   New symbols: ${symbolsAdded}`);
console.log(`   New corrections: ${correctionsAdded}`);
console.log(`   Total symbols: ${master.stats.totalSymbols}`);
console.log(`   Total corrections: ${master.stats.totalCorrections}\n`);

// Write updated master file
fs.writeFileSync('community-corrections/master.json', JSON.stringify(master, null, 2));

console.log('ðŸ’¾ Updated community-corrections/master.json');
console.log('\nðŸ“Œ Next steps:');
console.log('   1. Review the changes: git diff community-corrections/master.json');
console.log('   2. Commit: git add community-corrections/master.json');
console.log('   3. Commit: git commit -m "Merge community corrections from [contributor]"');
console.log('   4. Push: git push');
console.log('   5. Close the GitHub issue with a thank you message\n');